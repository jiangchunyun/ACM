//深搜用到了递归正是因为递归是先进后出的结构，符合栈的机构，所以用递归是比较好的
#include<stdio.h>
#include<string.h>
#include<iostream>
#define MAX 15
using namespace std;
int used[100], n, p[100];
void dfs(int x) {
    if(x > n) {//深搜最后符合条件的输出
        for(int j = 1; j <= n; j++) {
            cout << p[j] << " ";
        }
        cout << endl;
        return ;
    }
    int i;
    for(i = 1; i <= n; i++) {//深搜的一般格式都是用for循环
        if(!used[i]) {
            p[x] = i;
            used[i] = 1;
            dfs(x + 1);
            used[i] = 0;//深搜返回后做的事
        }
    }
}

int main() {
    cin >> n;
    dfs(1);
    return 0;
}
